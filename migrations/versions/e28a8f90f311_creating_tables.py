"""creating tables

Revision ID: e28a8f90f311
Revises: 
Create Date: 2025-03-25 14:59:59.919417

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e28a8f90f311'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_finish_reason',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hints',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('icon_link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('prizes',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('hardness_level', sa.Integer(), nullable=False),
    sa.Column('graphics_link', sa.String(), nullable=True),
    sa.Column('correct_answer', sa.Integer(), nullable=False),
    sa.CheckConstraint('correct_answer BETWEEN 1 AND 4', name='CK__question__correct_answer'),
    sa.CheckConstraint('hardness_level BETWEEN 1 AND 3', name='CK__question__hardness_level'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=False),
    sa.Column('registered_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification_codes',
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('login')
    )
    op.create_table('answers_on_question',
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('answer_id BETWEEN 1 AND 4', name='CK__answers_on_question__answer_id'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('question_id', 'answer_id', name='PK__answers_on_question')
    )
    op.create_table('games',
    sa.Column('id', sa.Integer(), sa.Identity(always=False), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('finish_reason', sa.Integer(), nullable=True),
    sa.Column('prize', sa.Integer(), server_default='1', nullable=False),
    sa.ForeignKeyConstraint(['finish_reason'], ['game_finish_reason.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['prize'], ['prizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('game_answers_history',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.Integer(), nullable=False),
    sa.CheckConstraint('answer BETWEEN 1 AND 4', name='CK__game_answers_history__answer'),
    sa.CheckConstraint('question_number BETWEEN 1 AND 15', name='CK__game_answers_history__question_number'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('game_id', 'question_number', 'question_id', name='PK__game_answers_history')
    )
    op.create_table('hints_use_history',
    sa.Column('game_id', sa.Integer(), nullable=False),
    sa.Column('hint_id', sa.Integer(), nullable=False),
    sa.Column('question_number', sa.Integer(), nullable=False),
    sa.CheckConstraint('question_number BETWEEN 1 AND 15', name='CK__hints_use_history__question_number'),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['hint_id'], ['hints.id'], ),
    sa.PrimaryKeyConstraint('game_id', 'hint_id', 'question_number', name='PK__hints_use_history')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('hints_use_history')
    op.drop_table('game_answers_history')
    op.drop_table('games')
    op.drop_table('answers_on_question')
    op.drop_table('verification_codes')
    op.drop_table('users')
    op.drop_table('questions')
    op.drop_table('prizes')
    op.drop_table('hints')
    op.drop_table('game_finish_reason')
    # ### end Alembic commands ###
